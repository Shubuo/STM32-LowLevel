#include "stm32f10x.h"


const unsigned long led_mask[] = { 1UL<<8, 1UL<<9 };

void SystemCoreClockConfigure(void)
{
	RCC->CR |= ((uint32_t)RCC_CR_HSION);                     // Enable HSI
  while ((RCC->CR & RCC_CR_HSIRDY) == 0);                  // Wait for HSI Ready

  RCC->CFGR = RCC_CFGR_SW_HSI;                             // HSI is system clock
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI);  // Wait for HSI used as system clock

  FLASH->ACR  = FLASH_ACR_PRFTBE;                          // Enable Prefetch Buffer
  FLASH->ACR |= FLASH_ACR_LATENCY;                         // Flash 1 wait state

  RCC->CFGR |= RCC_CFGR_HPRE_DIV1;                         // HCLK = SYSCLK
  RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;                        // APB1 = HCLK/2
  RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;                        // APB2 = HCLK

  RCC->CR &= ~RCC_CR_PLLON;                                // Disable PLL

	  //  PLL configuration:  = HSI/2 * 12 = 48 MHz
  RCC->CFGR &= ~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL);
  RCC->CFGR |=  (RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLMULL12);

  RCC->CR |= RCC_CR_PLLON;                                 // Enable PLL
  while((RCC->CR & RCC_CR_PLLRDY) == 0) __NOP();           // Wait till PLL is ready

  RCC->CFGR &= ~RCC_CFGR_SW;                               // Select PLL as system clock source
  RCC->CFGR |=  RCC_CFGR_SW_PLL;
  while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);  // Wait till PLL is system clock src
}	
	
int main()
{
	
	 SystemCoreClockUpdate();
	
	
	
	/*
	RCC->APB2ENR |=  1 <<  4;                    / Enable GPIOC clock          /
  GPIOC->CRH   &= 0xFFFFFF00;                  / Configure the GPIO for LEDs /
  GPIOC->CRH   |= 0x00000033;                  / Configure the GPIO for LEDs /
	*/
	RCC->APB2ENR |=  1 <<  2;                    /* Enable GPIOA clock          */
  GPIOA->CRH   &= 0xFFFFFFF0;                  /* Configure the GPIO for BTNs */
  GPIOA->CRH   |= 0x00000008;                  /* Configure the GPIO for BTNs */
	

  GPIOA->BSRR = led_mask[GPIOA_BASE];                 /* Turn On  LED                */
	// (uint32_t)0x40000000 |= 0x10000
	// (uint32_t)0x40000000 |= 0x0800
  
while(1);

}
